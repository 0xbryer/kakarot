name: Pre-Release on Main Push

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: read

jobs:
  create-pre-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.14
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - run: poetry config installer.modern-installation false
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: make setup
      - name: Compile all the cairo files
        run: make build
      - name: Create release artifact
        run: |
          zip -r kakarot-pre-release-build.zip build/
      - name: Generate and process release notes
        id: release_notes
        run: |
          {
            echo "Pre-release build created on $(date +'%Y-%m-%d %H:%M:%S')"
            echo "Commit: ${{ github.sha }}"
            echo "Recent changes:"
            git log -n 5 --pretty=format:"- %s"
          } > release_notes.md

          RELEASE_BODY=$(cat release_notes.md)
          RELEASE_BODY="${RELEASE_BODY//'%'/'%25'}"
          RELEASE_BODY="${RELEASE_BODY//$'\n'/'%0A'}"
          RELEASE_BODY="${RELEASE_BODY//$'\r'/'%0D'}"
          echo "RELEASE_BODY=$RELEASE_BODY" >> $GITHUB_OUTPUT
      - name: Create Pre-Release and Upload Asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: kakarot-pre-release-build.zip
          asset_name: kakarot-pre-release-build.zip
          tag: pre-release-${{ github.sha }}
          release_name: Pre-Release ${{ github.sha }}
          prerelease: true
          make_latest: false
          body: |
            ${{ steps.release_notes.outputs.RELEASE_BODY }}
